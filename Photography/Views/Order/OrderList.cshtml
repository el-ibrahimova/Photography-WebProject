@using Photography.Core.ViewModels.Order
@using Photography.Infrastructure.Data.Models
@using Microsoft.CodeAnalysis.CSharp.Syntax
@model IEnumerable<OrderListViewModel>

@{
    ViewBag.Title = "Кошница";
}

@foreach (var order in Model)
{
    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-warning text-center">
            Кошницата е празна.
        </div>
    }
    else
    {
        <div class="row align-items-center mb-4 py-3" style="border-bottom: 1px solid #ccc;">
            <div class="col-md-2 text-center">
                <img src="@order.ImageUrl" class="img-fluid" style="width: 200px; height: auto; object-fit: contain;" />
            </div>

            <div class="service-section">
                <label>Услуги</label>
                <div id="services-container-@order.PhotoId" class="services-container">
                    <div class="service-row d-flex align-items-center mb-2">
                        <select name="SelectedOfferIds" class="form-control service-select me-2" data-photo-id="@order.PhotoId">
                            <option disabled selected value="">Изберете услуга...</option>
                            @foreach (var offer in order.Offers)
                            {
                                <option value="@offer.Id" data-price="@offer.Price">
                                    @offer.Name (@offer.Price.ToString("F2") лв.)
                                </option>
                            }
                        </select>
                        <input type="number" name="Quantity" value="1" class="form-control quantity-input me-2" min="1" placeholder="Брой" />
                        <span class="service-price me-2">Цена: 0.00 лв.</span>
                        <button type="button" class="btn btn-danger remove-service">Премахни</button>
                    </div>
                </div>
                <button type="button" class="btn btn-secondary add-service mt-3" data-photo-id="@order.PhotoId">Добави още услуги</button>
            </div>

            <div class="col-md-4 text-end mt-3">
                <label>Обща цена:</label>
                <span id="total-price-@order.PhotoId" class="text-primary fw-bold">0.00 лв.</span>
            </div>



            <div>
                <form asp-controller="Order" asp-action="Remove" asp-route-id="@order.PhotoId" method="post">
                    <input type="hidden" name="id" value="@order.PhotoId" />
                    <button type="submit" class="btn btn-danger mb-2 w-100 button-height">Изтрий</button>
                </form>
            </div>
            <form asp-controller="Order" asp-action="AcceptOrder" asp-route-id="@order.OrderId" method="post">
                <input type="hidden" name="id" value="@order.OrderId" />
                <button type="submit" class="btn btn-success mb-2 w-100 button-height">Изпрати поръчката</button>
            </form>

        </div>
    }
}

@*  adding new field with offer and calculating total price *@

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Добавяне на нова услуга
        document.querySelectorAll(".add-service").forEach(button => {
            button.addEventListener("click", () => {
                const photoId = button.getAttribute("data-photo-id");
                const container = document.getElementById(`services-container-${photoId}`);

                // Създаване на нов ред за услуга
                const newRow = document.createElement("div");
                newRow.classList.add("service-row", "d-flex", "align-items-center", "mb-2");
                newRow.innerHTML = `
                                        <select name="SelectedOfferIds" class="form-control service-select me-2" data-photo-id="${photoId}">
                                            <option disabled selected value="">Изберете услуга...</option>
                                            ${Array.from(container.querySelector("select").options).map(option =>
                    `<option value="${option.value}" data-price="${option.getAttribute("data-price")}">${option.text}</option>`).join("")}
                                        </select>
                                        <input type="number" name="Quantity" value="1" class="form-control quantity-input me-2" min="1" placeholder="Брой" />
                                        <span class="service-price me-2">Цена: 0.00 лв.</span>
                                        <button type="button" class="btn btn-danger remove-service">Премахни</button>
                                    `;

                // Добавяне на новия ред
                container.appendChild(newRow);
                attachEventListeners(newRow, photoId);
            });
        });

        // Прикачване на събития към полетата за изчисление
        const attachEventListeners = (row, photoId) => {
            const select = row.querySelector(".service-select");
            const quantity = row.querySelector(".quantity-input");
            const priceElement = row.querySelector(".service-price");

            const updateRowPrice = () => {
                const selectedOption = select.options[select.selectedIndex];
                const price = parseFloat(selectedOption?.getAttribute("data-price")) || 0;
                const quantityValue = parseInt(quantity.value) || 1;

                const rowPrice = price * quantityValue;
                priceElement.textContent = `Цена: ${rowPrice.toFixed(2)} лв.`;
                updateTotalPrice(photoId);
            };

            select.addEventListener("change", updateRowPrice);
            quantity.addEventListener("input", updateRowPrice);

            row.querySelector(".remove-service").addEventListener("click", () => {
                row.remove();
                updateTotalPrice(photoId);
            });
        };

        // Обновяване на общата цена
        const updateTotalPrice = (photoId) => {
            const container = document.getElementById(`services-container-${photoId}`);
            const totalPriceElement = document.getElementById(`total-price-${photoId}`);

            let totalPrice = 0;

            container.querySelectorAll(".service-row").forEach(row => {
                const select = row.querySelector(".service-select");
                const quantity = row.querySelector(".quantity-input");
                const selectedOption = select.options[select.selectedIndex];
                const price = parseFloat(selectedOption?.getAttribute("data-price")) || 0;
                const quantityValue = parseInt(quantity.value) || 1;

                totalPrice += price * quantityValue;
            });

            totalPriceElement.textContent = `${totalPrice.toFixed(2)} лв.`;
        };

        // Прикачване на събития към съществуващите редове
        document.querySelectorAll(".service-row").forEach(row => {
            const photoId = row.querySelector(".service-select").getAttribute("data-photo-id");
            attachEventListeners(row, photoId);
        });
    });
</script>
